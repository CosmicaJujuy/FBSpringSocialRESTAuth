<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:http="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">



	<security:http use-expressions="true" pattern="/protected/**"
		create-session="never" entry-point-ref="forbiddenEntryPoint">
		<security:intercept-url pattern="/**"
			access="hasRole('ROLE_USER_REST_MOBILE')" />
		<!-- Adds social authentication filter to the Spring Security filter chain. -->
		<security:custom-filter ref="facebookTokenAuthenticationFilter"
			before="FORM_LOGIN_FILTER" />
	</security:http>


	<bean id="facebookTokenAuthenticationFilter"
		class="com.ozgen.server.security.oauth.FacebookTokenAuthenticationFilter">
		<constructor-arg index="0" ref="authenticationManager" />
		<constructor-arg index="1" ref="userIdSource" />
		<constructor-arg index="2" ref="usersConnectionRepository" />
		<constructor-arg index="3" ref="connectionFactoryLocator" />
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="socialAuthenticationProvider" />
	</security:authentication-manager>

	<!-- Configures the social authentication provider which processes authentication 
		requests made by using social authentication service (FB). -->
	<bean id="socialAuthenticationProvider"
		class="org.springframework.social.security.SocialAuthenticationProvider">
		<constructor-arg index="0" ref="usersConnectionRepository" />
		<constructor-arg index="1"
			ref="simpleSocialUserDetailsService" />
	</bean>

	<bean id="forbiddenEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

	<!-- This bean determines the account ID of the user.-->
	<bean id="userIdSource"
		class="org.springframework.social.security.AuthenticationNameUserIdSource" />

	<!-- This is used to hash the password of the user. -->
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg index="0" value="10" />
	</bean>
	<!-- This bean encrypts the authorization details of the connection. In 
		our example, the authorization details are stored as plain text. DO NOT USE 
		THIS IN PRODUCTION. -->
	<bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors"
		factory-method="noOpText" />
	
</beans>